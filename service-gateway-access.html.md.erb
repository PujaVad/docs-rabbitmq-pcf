---
title: Service-Gateway Access (Beta)
owner: RabbitMQ
---

Service-gateway access enables a RabbitMQ service instance to connect to external components
that are not on the same <%= vars.platform_name %> foundation as the RabbitMQ service. These
components could be on another <%= vars.platform_name %> foundation or hosted outside of the
<%= vars.platform_name %> foundation.

For related procedures, see:

* [Enabling Service-Gateway Access](./enable-service-gateway.html)
* [Create a Service Instance with Service-Gateway Access](./create-service-gateway-instance.html)

<p class="note">
  <strong>Note:</strong> Service-Gateway access is marked as beta because it is only supported for Advanced Message Queuing
  Protocol (AMQP). Support for other RabbitMQ protocols is planned.
</p>


## <a id='overview'></a> Overview

There are multiple use cases for service-gateway RabbitMQ access. For example:

- Accessing RabbitMQ from apps deployed to <%= vars.app_runtime_full %> (<%= vars.app_runtime_abbr %>)
in a different <%= vars.platform_name %> foundation
- Replicating messages between RabbitMQ clusters in different <%= vars.platform_name %> foundations,
for example, to set up federation for disaster recovery
- Enabling apps running outside the <%= vars.platform_name %> foundation to communicate, through RabbitMQ,
with <%= vars.app_runtime_abbr %>-deployed apps
- Using RabbitMQ as a service for apps that are not deployed to <%= vars.app_runtime_abbr %>

## <a id='architecture'></a> Architecture

Service-gateway access to RabbitMQ instances leverages the TCP router in <%= vars.app_runtime_abbr %>.

Any RabbitMQ requests an app makes are forwarded through DNS to a load balancer that can route traffic from
outside to the <%= vars.platform_name %> foundation.
This load balancer opens a range of ports that are reserved for RabbitMQ traffic.
When an app developer creates a service instance on a plan with service-gateway access enabled, a port from
the range is provisioned for that service instance.
The load balancer then forwards the requests for this RabbitMQ instance to the TCP router.
The TCP router internally load balances between the RabbitMQ Service instance nodes.

The diagram below shows how the traffic is routed from apps to the RabbitMQ nodes in this case.
All apps using this RabbitMQ instance follow the same route, irrespective of whether they are hosted on the
<%= vars.platform_name %> foundation or are hosted outside of the foundation.

![An app that is external to the foundation sends traffic to the external load balancer.
The load balancer sends the traffic to a RabbitMQ tile port in the TCP router.
The TCP router is inside the <%= vars.platform_name %> foundation.
The TCP router balances the load among the RabbitMQ nodes in the RabbitMQ service instance.](/images/service-gateway-architecture.png)
[Click here to view a larger version of this image.](./images/service-gateway-architecture.png)
