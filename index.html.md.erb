---
breadcrumb: RabbitMQ for Pivotal Platform Documentation
title: RabbitMQ for Pivotal Platform
owner: London Services
---

<%= partial '../../rabbitmq-cf/partials/branding-change' %>

<%= partial '../../rabbitmq-cf/partials/pcf-name-change' %>

## <a id='AboutTile'></a>About <%= vars.product_full %>

<%= vars.product_short %> enables <%= vars.platform_name %> app developers to provision and use the RabbitMQ message broker with a
single command.

As of v1.8, <%= vars.product_short %> supports two types of service, an *on-demand* service and a *pre-provisioned* service.

This table summarizes the main differences between the two:

<table id='rabbit-odb-vs-pre' border="1" class="nice"><tr>
  <col style="width:15%">
  <col style="width:10%">
  <col style="width:28%">
  <col style="width:29%">
  <col style="width:18%">
   <th></th>
   <th>VMs it Runs On</th>
   <th>How VMs are Created</th>
   <th>Metrics Name Prefix</th>
   </tr><tr>
   <th>On-Demand Service</th>
   <td>Dedicated VM that serves a single service instance. See <a href="./ondemand.html">this topic</a> for details.</td>
   <td><%= vars.platform_name %> creates each VM on-demand when app developer creates service instance</td>
   <td><code>p.rabbitmq</code> (with a dot)</td>
   </tr><tr>
   <th>Pre-Provisioned Service</th>
   <td>Multi-tenant VMs shared by apps across <%= vars.platform_name %> deployment</td>
   <td><%= vars.platform_name %> creates all VMs when operator deploys or updates service</td>
   <td><code>p-rabbitmq</code> (with a dash)</td>
   </tr>
</table>


<p class="note"><strong>Note:</strong> For most new applications, Pivotal recommends that you use
on-demand services instead of pre-provisioned services.
On-demand isolates workloads by creating a separate VM for each service instance.
</p>

### <a id="dedicated"></a> What are On-Demand Instances

In <%= vars.product_short %> versions before v1.8.0, the RabbitMQ service
instances correspond to a unique RabbitMQ Vhost on the multi-tenant RabbitMQ
cluster. <%= vars.product_short %> v1.8.0 introduced [On-Demand Broker
(ODB)](https://docs.pivotal.io/svc-sdk/odb/index.html) support. That means
that a new, single-tenant, cluster can be created and dedicated to a single app.

For more information, see [Unlocking the Power of On-Demand <%= vars.product_full %>](./ondemand.html) and [On-Demand Service Architecture](./about.html).

## <a id='AboutRabbit'></a>About RabbitMQ

RabbitMQ is a fast and dependable open-source message server, which supports a wide range of use cases
including reliable integration, content-based routing and global data delivery, and high-volume monitoring and data ingestion.

Emerging as the de facto standard for cloud messaging, RabbitMQ is used for efficient communication
between servers, apps and devices, and creates lasting value by enabling rapid development of modern decentralized
app and data architectures that can scale with your business needs.


## <a id='snapshot'></a> Product Snapshot

The following table provides version and version-support information about <%= vars.product_short %>.

<table class="nice">
    <th>Element</th>
    <th>Details</th>
    <tr>
        <td>Version</td>
        <td>1.18.3</td>
    </tr>
    <tr>
        <td>Release date</td>
        <td>January 9, 2020</td>
    </tr>
    <tr>
        <td>Software component version</td>
        <td>RabbitMQ OSS 3.8.2</td>
    </tr>
    <tr>
        <td>Compatible <%= vars.ops_manager_full %> version(s)</td>
        <td>2.5, 2.6, 2.7, and 2.8</td>
    </tr>
    <tr>
        <td>Compatible <%= vars.app_runtime_full %> version(s)</td>
        <td>2.5, 2.6, 2.7, and 2.8</td>
    </tr>
    <tr>
        <td>IaaS support</td>
        <td>AWS, Azure, GCP, OpenStack, and vSphere</td>
    </tr>
   <tr>
        <td>IPsec support</td>
        <td>No</td>
    </tr>
</table>

## <a id='features'></a>Features

###<a id='on-demand'></a> On-Demand

* Create up to 5 different on-demand RabbitMQ plans which can be provisioned through the Marketplace
* Choose whether a plan has 1, 3, 5, or 7 nodes
* Default resource sizes in plans to guide selection
* More control over which Orgs and Spaces have visibilty of each configured plan
* Bind apps to an instance of the plan, providing unique credentials for each binding
* Management UI access to app developers
* Deployment into an availability zone specified by the plan
* Enable Transport Layer Security (TLS) for the AMQP protocol
* Automated upgrades of RabbitMQ for major, minor, and patch releases (see release notes for downtime requirements)
* RabbitMQ Syslog forwarding configuration inherited from the pre-provisioned configuration
* RabbitMQ metrics are exposed on the firehose
* Run smoke tests for on-demand plans on plan 1
* Errands are run on co-located VMs to decrease deployment times

For more information, see [Unlocking the Power of On-Demand <%= vars.product_full %>](./ondemand.html).

###<a id='pre-provisioned'></a> Pre-Provisioned

* Provision an instance of the RabbitMQ service, which corresponds to a unique RabbitMQ Vhost (virtual host)
* Bind apps to an instance of the plan, providing unique credentials for each binding
* Management UI access to <%= vars.platform_name %> Operators and app developers
* Deployment across multiple availability zones, with nodes striped across the AZs automatically
* Enable SSL (Secure Sockets Layer) for the AMQP, MQTT, STOMP protocols
* HAProxy load balancer across all nodes to balance connections
* Plugin configuration can be easily changed at any time and the cluster redeployed and updated
* The cluster topology can be changed and easily scaled out
* Automated upgrades of RabbitMQ for major, minor, and patch releases (see [Downtime When Upgrading](./upgrade.html#downtime) for downtime requirements)
* Configure the end point for the RabbitMQ Syslog
* RabbitMQ and HAProxy metrics are exposed on the firehose
* Syslog forwarding on by default
* Errands are run on co-located VMs to decrease deployment times



## <a id='known-issues'></a>Release Notes and Known Issues

Check the [release notes](releases.html) for your release version for important information and known issues. To see release notes for another version, select the version from the dropdown list at the top of the page.

##<a id="other-services"></a> <%= vars.product_short %> and Other <%= vars.platform_name %> Services

<%# The below partial is in https://github.com/pivotal-cf/docs-partials %>

<%= partial vars.path_to_partials + '/services/on-demand-service-table', :locals => {
  :service_name => vars.service_name, :platform_name => vars.platform_name, :rabbit => "RabbitMQ for Pivotal Platform", :redis => "Redis for Pivotal Platform", :mysql => "MySQL for Pivotal Platform"
} %>

## <a id='feedback'></a>Feedback

Please provide any bugs, feature requests, or questions to the [<%= vars.platform_name %> Feedback list](mailto:pivotal-cf-feedback@pivotal.io).
