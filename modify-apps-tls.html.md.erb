---
title: Modifying Apps for TLS
owner: RabbitMQ for PCF
---

<!-- The below partial is in https://github.com/pivotal-cf/docs-partials -->
<%= partial vars.path_to_partials + "/services/deprecation-notice-eogs" %>

<p class="note"><strong>Note:</strong> If your app is written in Java or Spring,
    see <a href="./use.html#tls-java-spring"> Activate TLS for Java and Spring Apps</a>.
For other types of apps, use the procedures in this topic.</p>


This topic provides instructions to developers to modify apps that are not written in Java or Spring
to use TLS to secure their connection with RabbitMQ on-demand service instances.


##<a id='prereqs'></a> Prerequisites

The following are prerequisites to procedures in this topic:

* The operator must complete these procedures, in this order:
    1. [Provide or Generate a CA Certificate](./prepare-tls.html#provide-generate-pcf)
    2. [Configure Security](./install-config.html#security)
* The developer must complete the procedures in [Configure TLS for Your Service Instance](use.html#tls).

##<a id='modify'></a> Modify Your App for TLS

To start using TLS for apps that are not written in Java or Spring, you must modify your app to use the correct protocol.

To modify your app, do the following:

1. Use one of the code snippets below. <br><br>
In these examples, `VCAP_SERVICES` is an environment variable available from the app.
	* **Option 1:** If the operator enabled TLS using a certificate from a trusted authority, use the code below.

		```ruby
		require 'json'
		require 'bunny'

		vcap_services = JSON.parse(ENV['VCAP_SERVICES'])
		uri = vcap_services['p.rabbitmq'][0]['credentials']['protocols']['amqp+ssl']['uris'].sample
		conn = Bunny.new(uri)
		conn.start
		```
		<br>
	* **Option 2:** If the operator used a self-signed ceritificate, configure the RabbitMQ client to use the same CA certificate, and valid certificate and key.
	Use the example code below, replacing the variables for `PATH_TO_CERTIFICATE`, `PATH_TO_KEY`, and `PATH_TO_CA_CERTIFICATE`.

		```ruby
		require 'json'
		require 'bunny'

		vcap_services = JSON.parse(ENV['VCAP_SERVICES'])
		uri = vcap_services['p.rabbitmq'][0]['credentials']['protocols']['amqp+ssl']['uris'].sample
		conn = Bunny.new(uri, tls_cert: PATH_TO_CERTIFICATE, tls_key: PATH_TO_KEY, tls_ca_certificates: [PATH_TO_CA_CERTIFICATE])
		conn.start
		```

##<a id='repush-rebind'></a> Repush or Rebind Your App

After modifying your app, repush it with `cf push`.

<p class="note warning"><strong>WARNING</strong>: Any apps using an existing service instance must be rebound after enabling TLS for the instance.</p>

Follow these steps to rebind an app using an existing service intance:

1. Stop the app. For example:
    <pre class="terminal">$ cf stop my-app</pre>
1. Unbind the app from the service instance. For example:
    <pre class="terminal">$ cf unbind-service my-app my-service-instance</pre>
1. Re-bind the app to the service instance. For example:
    <pre class="terminal">$ cf bind-service my-app my-service-instance</pre>
1. Restage the app. For example:
    <pre class="terminal">$ cf restage my-app</pre>

Your app should now communicate securely with the RabbitMQ service instance.
