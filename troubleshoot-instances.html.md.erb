---
title: Troubleshooting On-Demand Instances
owner: London Services
---

 
 

This topic provides basic instructions for app developers troubleshooting on-demand RabbitMQ for PCF instances.

## <a id="errors"></a> Troubleshoot Errors

Start here if you are responding to a specific error or error messages.

### <a id="general-errors"></a> Troubleshoot General Errors

<%# The below partial is in https://github.com/pivotal-cf/docs-partials %>

<%= partial vars.path_to_partials + '/services-tshoot/tshoot-no-metrics' %>


## <a id="techniques"></a> Techniques for Troubleshooting

See the following sections for troubleshooting techniques when using 
the Cloud Foundry Command-Line Interface (cf CLI) to perform basic 
operations on a <%= vars.product_short %> service instance.

Basic cf CLI operations include `create`, `update`, `bind`, `unbind`, and `delete`.

### <a id="parse-error"></a>Parse a Cloud Foundry (CF) Error Message

<p>
  Failed operations (create, update, bind, unbind, delete) result in an error message.
  You can retrieve the error message later by running the cf CLI command <code>cf service INSTANCE-NAME</code>.
</p>

<pre class="terminal">
$ cf service myservice

Service instance: myservice
Service: super-db
Bound apps:
Tags:
Plan: dedicated-vm
Description: Dedicated Instance
Documentation url:
Dashboard:

Last Operation
Status: create failed
Message: Instance provisioning failed: There was a problem completing your request.
     Please contact your operations team providing the following information:
     service: redis-acceptance,
     service-instance-guid: ae9e232c-0bd5-4684-af27-1b08b0c70089,
     broker-request-id: 63da3a35-24aa-4183-aec6-db8294506bac,
     task-id: 442,
     operation: create
Started: 2017-03-13T10:16:55Z
Updated: 2017-03-13T10:17:58Z
</pre>

<p>
  Use the information in the <code>Message</code> field to debug further.
  Provide this information to Pivotal Support when filing a ticket.
</p>

<p>
  The <code>task-id</code> field maps to the BOSH task ID.
  For more information on a failed BOSH task, use the <code>bosh task TASK-ID</code>.
</p>

<p>
  The <code>broker-request-guid</code> maps to the portion of the On-Demand Broker log
  containing the failed step.
  Access the broker log through your syslog aggregator, or access BOSH logs for
  the broker by typing <code>bosh logs broker 0</code>.
  If you have more than one broker instance, repeat this process for each instance.
</p>

### <a id="instance"></a> Retrieve Service Instance Information

1. Log into the space containing the instance or failed instance.
    <pre class="terminal">
    $ cf login
    </pre>

1. If you do not know the name of the service instance, run `cf services` to see a listing of all service instances in the space. The service instances are listed in the `name` column.
    <pre class="terminal">
    $ cf services
    Getting services in org my-org / space my-space as user<span>@</span>example.com...
    OK
    name          service            plan    bound apps    last operation
    my-instance   ondemand-rabbitmq  Solo                  create succeeded
    </pre>

1. Run `cf service SERVICE-INSTANCE-NAME` to retrieve more information about a specific instance.

1. Run `cf service SERVICE-INSTANCE-NAME --guid` to retrieve the GUID of the instance, which is useful for debugging.

### <a id="management-ui-credentials"></a> Retrieve RabbitMQ Instance Credentials

To access the RabbitMQ Management UI for troubleshooting,
create a new service-key to retrieve RabbitMQ instance credentials.
Pivotal recommends that you use this key for troubleshooting only, and that you
delete the key after troubleshooting.
To retrieve the credentials, do the following:

1. Create a service-key for your RabbitMQ instance using the command
`cf create-service-key INSTANCE-NAME SERVICE-KEY-NAME`.

1. Retrieve the credentials using the command
`cf service-key INSTANCE-NAME SERVICE-KEY-NAME`.

For example:
<pre class="terminal">
$ cf create-service-key my-rmq-instance my-key
Creating service key my-key for service instance my-rmq-instance as admin...
OK
$ cf service-key my-rmq-instance my-key
Getting key my-key for service instance my-rmq-instance as admin...
{
 "host": "10.0.8.4",
 "password": "",
 "port": 6379
}
</pre>

### <a id='credential-setting-failure'></a>Error: Failed to Set Credentials in Credential Store

<p>
  If you encounter:
</p>

<pre class="terminal">
error: failed to set credentials in credential store:
The request includes an unrecognized parameter 'mode'.
Please update or remove this parameter and retry your request.
</pre>

<p>
  after upgrading from PCF 2.3 to 2.4, it is likely because one or more installed on-demand brokers
  were not restarted during the upgrade. To clear the cached server version and enable
  your on-demand brokers to communicate with CredHub v2, do the procedure in
  <a href="https://docs.pivotal.io/pivotalcf/2-4/customizing/upgrading-pcf.html#bosh-restart">Run BOSH Restart on Your On-Demand Service Brokers</a>.
</p>

## <a id="kb"></a>Knowledge Base (Community)

<p>
  Find the answer to your question and browse product discussions and solutions by
  searching the <a href="https://community.pivotal.io/s/">Pivotal Knowledge Base</a>.
</p>

## <a id="support"></a>File a Support Ticket

<p>
  You can file a support ticket <a href="https://support.pivotal.io/">here</a>.
  Be sure to provide the error message from <code>cf service YOUR-SERVICE-INSTANCE</code>.
</p>

<p>
  To expedite troubleshooting, if possible, provide your service broker logs,
  service instance logs, and BOSH task output.
  Your cloud operator should be able to obtain these from your error message.
</p>


## <a id="delete_rabbitmq_instance"></a>Delete RabbitMQ Instances

On-Demand Broker provides a BOSH command to delete all the On-Demand Broker deployed instances. To delete the instances, do the following procedure:

1. Run the following command to delete all instances of the On-Demand Broker:

    <p class="note warning"><strong>WARNING: </strong>This command deletes deployment instances serially. It is very destructive and cannot be undone.</p>

    `bosh run-errand delete-sub-deployments`
