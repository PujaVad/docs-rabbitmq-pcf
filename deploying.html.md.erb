---
breadcrumb: RabbitMQ for Pivotal Cloud Foundry Documentation
title: Deploying the RabbitMQ <br>Pre-Provisioned Service
owner: London Services
---

## <a id="default"></a>Default Deployment

Deploying RabbitMQ for [Pivotal Cloud Foundry](https://network.pivotal.io/products/pivotal-cf) (PCF) through <%= vars.ops_manager %> deploys a RabbitMQ cluster of **3 nodes** by default.

The deployment includes a single load balancer `haproxy` which spreads connections on all of the default ports, for all of the shipped plugins across all of the machines within the cluster.

The deployment occurs in a single availability zone (AZ).

The default configuration is for testing purposes only and Pivotal recommends that customers have a minimum of **3 RabbitMQ nodes** and **2 HAProxy nodes**

<%= image_tag("images/deployment_default.jpeg") %>

### <a id="default-consider"></a>Considerations for this deployment

* Provides high availability for the RabbitMQ cluster
* Queues must be configured to be high availability as they are placed on one node by default
* Customers should decide which partition behavior is best suited to their use case. For two nodes 'automatic' is preferred.
* HAProxy is a single point of failure (SPOF)
* The entire deployment is in a single AZ, which does not protect against external failures from failures in hardware, networking, etc.

## <a id="recommended"></a>Recommended Deployment

Pivotal recommends that RabbitMQ for PCF is deployed across at least two AZs.
Scale RabbitMQ server nodes to an odd number that is greater than or equal to three.

Only use replication of queues where required as it can have a big impact on system performance.

The HAProxy job instance count should also be increased to match the number of AZs to ensure there is a HAProxy located in each AZ.
This removes the HAProxy SPOF and provides further redundancy.

<%= image_tag("images/deployment_recommended.jpeg") %>

The diagram above shows that you can now suffer the failure of a single HAProxy and single RabbitMQ node and still keep your cluster online and applications connected.

### <a id="upgrade-from-single-az"></a>Upgrading to this deployment from a single AZ deployment

It is **not** possible to upgrade to this setup from the default deployment across a single AZ.

This is because the AZ setup cannot be changed after the tile has been deployed for the first time. This is to protect against data loss when moving jobs between AZs.

### <a id="upgrade-from-multi-az"></a>Upgrading to this deployment from a multi AZ deployment

If you have deployed the tile across two AZs, but with a single HAProxy instance, you can migrate to this setup by deploying an additional HAProxy instance through <%= vars.ops_manager %>.
New or re-bound applications to the RabbitMQ service see the IPs of both HAProxies immediately.
Existing bound applications will continue to work, but only using the previously deployed HAProxy IP Address. They can be re-bound as required at your discretion.

### <a id="recommended-consider"></a>Considerations for this deployment

* Requires IaaS configuration for AZs ahead of deploying the RabbitMQ tile
* Application developers are handed the IPs of each deployed HAProxy in their environment variables
* Queues must be configured to be high availability as they are placed on one node by default
* Customers should decide on which partition behavior is best suited to their use case. For three or more nodes 'pause_minority' is preferred.

## <a id="advanced"></a>Advanced Deployment

This deployment builds upon the above recommended deployment and so follows the same upgrade paths.

This allows you to replace the use of HAProxy with your own external load balancer.

You might choose to do this to remove any knowledge of the topology of the RabbitMQ setup from application developers.

<%= image_tag("images/deployment_advanced.jpeg") %>

Advantages

* Application developers do not need to handle multiple IPs for the HAProxy jobs in their applications

Disadvantages

* The load balancer needs to be configured with the IPs of the RabbitMQ Nodes. These are only be known after the deployment is finished. The IPs should remain the same during subsequent deployments but there is a risk they might change.


### <a id="upgrade-from-recommended"></a>Upgrading to this deployment from the recommended deployment

It is possible to first deploy with multiple HAProxy jobs, as per the recommended deployment, and later use your own external load balancer.

This can be achieved without downtime to your applications. Follow these steps to do so:

1. Configure your external load balancer to point to the RabbitMQ Node IPs.
2. Configure the DNS name or IP address for the external load balancer (ELB) on the RabbitMQ tile in <%= vars.ops_manager %>.
3. Deploy the changes. Any new instances of the RabbitMQ service **or** any re-bound connections will use the DNS name or IP address of the ELB in their `VCAP_SERVICES`. Any existing instances will continue to use the HAProxy IP addresses in their `VCAP_SERVICES`
6. Phase the re-binding of existing applications to update their environment variables.
7. After all applications are updated, reduce the instance count of the `HAProxy` job in <%= vars.ops_manager %> to 1.
9. Deploy the changes.

This approach works as any existing bound applications have their `VCAP_SERVICES` information cached in Cloud Controller and are only updated by a re-bind request.

### <a id="downgrade-to-recommended"></a>Downgrading from this deployment to the recommended deployment

If you are currently using an external load balancer, then you can move back to using HAProxies instead.

You can achieve this by following the above steps in reverse order and re-instating the HAProxy jobs.

## <a id="resource-requirements"></a>Resource requirements

The following table shows the default resource and IP requirements for installing the tile:
<table border="1" class="nice">
	<tr>
		<th>Product</th>
		<th>Resource</th>
		<th>Instances</th>
		<th>CPU</th>
		<th>Ram</th>
		<th>Ephemeral</th>
		<th>Persistent</th>
		<th>Static IP</th>
		<th>Dynamic IP</th>
	</tr>
	<tr>
		<td>RabbitMQ</td>
		<td>RabbitMQ node</td>
		<td>3</td>
		<td>2</td>
		<td>8192</td>
		<td>16384</td>
		<td>30720</td>
		<td>1</td>
		<td>0</td>
	</tr>
	<tr>
		<td>RabbitMQ</td>
		<td>HAProxy for RabbitMQ</td>
		<td>1</td>
		<td>1</td>
		<td>2048</td>
		<td>4096</td>
		<td>0</td>
		<td>1</td>
		<td>0</td>
	</tr>
	<tr>
		<td>RabbitMQ</td>
		<td>RabbitMQ service broker</td>
		<td>1</td>
		<td>1</td>
		<td>2048</td>
		<td>4096</td>
		<td>0</td>
		<td>1</td>
		<td>0</td>
	</tr>
	<tr>
		<td>RabbitMQ</td>
		<td>Broker Registrar</td>
		<td>1</td>
		<td>1</td>
		<td>1024</td>
		<td>2048</td>
		<td>0</td>
		<td>0</td>
		<td>1</td>
	</tr>
	<tr>
		<td>RabbitMQ</td>
		<td>Broker Deregistrar</td>
		<td>1</td>
		<td>1</td>
		<td>1024</td>
		<td>2048</td>
		<td>0</td>
		<td>0</td>
		<td>1</td>
	</tr>
	<tr>
		<td>RabbitMQ</td>
		<td>Smoke Tests</td>
		<td>1</td>
		<td>1</td>
		<td>1024</td>
		<td>2048</td>
		<td>0</td>
		<td>0</td>
		<td>1</td>
	</tr>
	<tr>
		<td>RabbitMQ</td>
		<td>RabbitMQ on-demand broker</td>
		<td>1</td>
		<td>1</td>
		<td>1024</td>
		<td>8192</td>
		<td>1024</td>
		<td>0</td>
		<td>1</td>
	</tr>
	<tr>
		<td>RabbitMQ</td>
		<td>Register On-Demand Service Broker</td>
		<td>1</td>
		<td>1</td>
		<td>1024</td>
		<td>2048</td>
		<td>0</td>
		<td>0</td>
		<td>1</td>
	</tr>
	<tr>
		<td>RabbitMQ</td>
		<td>Deregister On-Demand Service Broker</td>
		<td>1</td>
		<td>1</td>
		<td>1024</td>
		<td>2048</td>
		<td>0</td>
		<td>0</td>
		<td>1</td>
	</tr>
	<tr>
		<td>RabbitMQ</td>
		<td>Delete All Service Instances</td>
		<td>1</td>
		<td>1</td>
		<td>1024</td>
		<td>2048</td>
		<td>0</td>
		<td>0</td>
		<td>1</td>
	</tr>
	<tr>
		<td>RabbitMQ</td>
		<td>Upgrade All Service Instances</td>
		<td>1</td>
		<td>1</td>
		<td>1024</td>
		<td>2048</td>
		<td>0</td>
		<td>0</td>
		<td>1</td>
	</tr>
	<tr>
		<td>RabbitMQ</td>
		<td>Recreate All Service Instances</td>
		<td>1</td>
		<td>1</td>
		<td>1024</td>
		<td>2048</td>
		<td>0</td>
		<td>0</td>
		<td>1</td>
	</tr>
</table>

#### Notes:
* The number of `RabbitMQ Node` can be increased if required.
