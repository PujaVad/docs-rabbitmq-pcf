---
title: Troubleshooting On-Demand RabbitMQ for PCF
owner: London Services Enablement
---

In this topic:

* [About the BOSH CLI](#about-cli)
* [Troubleshooting Errors](#errors)
    * [Failed Install](#install-fail)
    * [Cannot Create or Delete Service Instances](#cannot-create-delete)
    * [Broker Request Timeouts](#timeouts)
    * [Cannot Bind to or Unbind from Service Instances](#cannot-bind)
    * [Cannot Connect to a Service Instance](#cannot-connect)
    * [Upgrade All Instances Fails](#upgrade-all-fails)
    * [Missing Logs and Metrics](#missing-logs)
    * [Failed Deployment on Upgrade or after Apply Changes](#failed-deployment)
* [Troubleshooting Components](#components)
    * [BOSH problems](#bosh)
    * [Configuration](#bosh-config)
    * [Authentication](#auth)
    * [Networking](#network)
    * [Quotas](#quotas)
* [Techniques for Troubleshooting](#techniques)
    * [Parse a Cloud Foundry (CF) Error Message](#parse-error)
    * [Access Broker and Instance Logs and VMs](#bosh-cf-access)
    * [Run Service Broker Errands to Manage Brokers and Instances](#broker-errands)
    * [Select the BOSH Deployment for a Service Instance](#instance-deployment)
    * [Get Admin Credentials for a Service Instance](#instance-creds)
    * [Reinstall a Tile](#reinstall)
    * [View Resource Saturation and Scaling](#view-resources)
    * [Identify Service Instance Owner](#id-instance-owner)
    * [Monitor Quota Saturation and Service Instance Count](#monitor-quota)
* [Frequently Asked Questions](#faq)
    * [What should I check before deploying a new version of the tile?](#newversion)
    * [What is the correct way to stop and start RabbitMQ in PCF?](#stopstart)
    * [What happens when I stop the RabbitMQ server?](#boshstopprocess)
    * [What happens when the RabbitMQ server fails to stop?](#boshstopresult)
    * [What do I do when the RabbitMQ server fails to stop?](#boshstopaction)
    * [How can I manually back up the state of the RabbitMQ cluster?](#backup)  
    * [What pre-upgrade checks should I do?](#preupgrade)
* [Knowledge Base (Community)](#kb)
* [File a Support Ticket](#support)
<br>

This topic provides operators with basic instructions for troubleshooting on-demand RabbitMQ&reg; for Pivotal Cloud Foundry (PCF).

<a id="errors"><h2></a>Troubleshooting Errors</h2>

Start here if you're responding to a specific error or error messages.

<a id="install-fail"></a><h3>Failed Install</h3>

<%= partial '../../rabbitmq-cf/odb/tshoot-err-install-fail' %>

<a id="cannot-create-delete"></a><h3>Cannot Create or Delete Service Instances</h3>

<%= partial '../../rabbitmq-cf/odb/tshoot-err-cannot-create-delete' %>

<a id="timeouts"></a><h3>Broker Request Timeouts</h3>

<%= partial '../../rabbitmq-cf/odb/tshoot-err-timeouts' %>

<a id="cannot-bind"><h3></a>Cannot Bind to or Unbind from Service Instances</h3>

<a id="instance-not-exist"></a><h4>Instance Does Not Exist</h4> 

<%= partial '../../rabbitmq-cf/odb/tshoot-err-instance-not-exist' %>

<a id="other-errors"></a><h4>Other Errors</h4>

<%= partial '../../rabbitmq-cf/odb/tshoot-err-other-errors' %>

<a id="cannot-connect"><h3></a>Cannot Connect to a Service Instance</h3>

<%= partial '../../rabbitmq-cf/odb/tshoot-err-cannot-connect' %>

<a id="upgrade-all-fails"><h3></a>Upgrade All Instances Fails</h3>

<%= partial '../../rabbitmq-cf/odb/tshoot-err-upgrade-all-fails' %>

<a id="missing-logs"><h3></a>Missing Logs and Metrics</h3>

<%= partial '../../rabbitmq-cf/odb/tshoot-err-missing-logs' %>

<a id="failed-deployment"><h3></a>Failed Deployment on Upgrade or after Apply Changes</h3>

If the deployment fails after editing the <strong>Assign AZs and Networks</strong> pane of the RabbitMQ for PCF tile,
it might be due to a change to the IP addresses assigned to the <code>RabbitMQ Server</code> job.
RabbitMQ for PCF requires that these IP addresses do not change once assigned. 
If you change them, the deployment fails. 
This includes changes made to your current installation or during an upgrade.

To diagnose and solve this issue, see <a href='changing-ips.html'>Changing Network or IP Addresses Results in a Failed Deployment</a>.

<a id="components"></a><h2>Troubleshooting Components</h2>

Guidance on checking for and fixing issues in on-demand service components.

<a id="bosh"></a><h3>BOSH problems</h3>

<a id="no-bosh-uuid"></a><h4>Missing BOSH Director UUID</h4>

<%= partial '../../rabbitmq-cf/odb/tshoot-comp-no-bosh-uuid' %>

<a id="large-queue"></a><h4>Large BOSH Queue</h4>

<%= partial '../../rabbitmq-cf/odb/tshoot-comp-large-queue' %>

<a id="bosh-config"></a><h3>Configuration</h3>

<a id="bosh-instance-fail"></a><h4>Service instances in failing state</h4>

<%= partial '../../rabbitmq-cf/odb/tshoot-comp-bosh-instance-fail' %>

<a id="auth"></a><h3>Authentication</h3>

<a id="uaa-change"></a><h4>UAA Changes</h4>

<%= partial '../../rabbitmq-cf/odb/tshoot-comp-uaa-change' %>

<a id="network"></a><h3>Networking</h3>

<%= partial '../../rabbitmq-cf/odb/tshoot-comp-network' %>

<a id="broker-to-instances"></a><h4>Validate Service Broker Connectivity to Service Instances</h4>

<%= partial '../../rabbitmq-cf/odb/tshoot-comp-broker-to-instances' %>

<a id="app-to-instances"></a><h4>Validate App Access to Service Instance</h4>

<%= partial '../../rabbitmq-cf/odb/tshoot-comp-app-to-instances' %>

<a id="quotas"></a><h3>Quotas</h3>

<a id="plan-quotas"></a><h4>Plan Quota issues</h4>

<%= partial '../../rabbitmq-cf/odb/tshoot-comp-plan-quotas' %>

<a id="global-quotas"></a><h4>Global Quota Issues</h4>

<%= partial '../../rabbitmq-cf/odb/tshoot-comp-global-quotas' %>

<a id="failing-jobs"></a><h4>Failing jobs and unhealthy instances</h4>

<%= partial '../../rabbitmq-cf/odb/tshoot-comp-failing-jobs' %>

<a id="techniques"></a><h2>Techniques for Troubleshooting</h2>

This section contains instructions on interacting with the on-demand service broker and on-demand service instance BOSH deployments, and on performing general maintenance and housekeeping tasks.

<a id="parse-error"></a><h3>Parse a Cloud Foundry (CF) Error Message</h3>

<%= partial '../../rabbitmq-cf/odb/tshoot-tech-parse-error' %>

<a id="bosh-cf-access"></a><h3>Access Broker and Instance Logs and VMs</h3>

<%= partial '../../rabbitmq-cf/odb/tshoot-tech-bosh-cf-access' %>

<a id="access-broker"></a><h4>Access Broker Logs and VM(s)</h4>

<%= partial '../../rabbitmq-cf/odb/tshoot-tech-access-broker' %>

<a id="access-instance"></a><h4>Access Service Instance Logs and VMs</h4>

<%= partial '../../rabbitmq-cf/odb/tshoot-tech-access-instance' %>

<a id="broker-errands"></a><h3>Run Service Broker Errands to Manage Brokers and Instances</h3>

<%= partial '../../rabbitmq-cf/odb/tshoot-tech-broker-errands' %>

<a id="register-broker"></a><h4>Register Broker</h4>

<%= partial '../../rabbitmq-cf/odb/tshoot-tech-register-broker' %>

<a id="deregister-broker"></a><h4>Deregister Broker</h4>

<%= partial '../../rabbitmq-cf/odb/tshoot-tech-deregister-broker' %>

<a id="upgrade-all"></a><h4>Upgrade All Service Instances</h4>

<%= partial '../../rabbitmq-cf/odb/tshoot-tech-upgrade-all' %>

<a id="delete-all"></a><h4>Delete All Service Instances</h4>

<%= partial '../../rabbitmq-cf/odb/tshoot-tech-delete-all' %>

<a id="detect-orphans"></a><h4>Detect Orphaned Instances Service Instances</h4>

<%= partial '../../rabbitmq-cf/odb/tshoot-tech-detect-orphans' %>

<a id="instance-deployment"></a><h3>Select the BOSH Deployment for a Service Instance</h3>

<%= partial '../../rabbitmq-cf/odb/tshoot-tech-instance-deployment' %>

<a id="instance-creds"></a><h3>Get Admin Credentials for a Service Instance</h3>

<%= partial '../../rabbitmq-cf/odb/tshoot-tech-instance-creds' %>

<a id="reinstall"></a><h3>Reinstall a Tile</h3>

<%= partial '../../rabbitmq-cf/odb/tshoot-tech-reinstall' %>

<a id="view-resources"></a><h3>View Resource Saturation and Scaling</h3>

<%= partial '../../rabbitmq-cf/odb/tshoot-tech-view-resources' %>

<a id="id-instance-owner"></a><h3>Identify Service Instance Owner</h3>

<%= partial '../../rabbitmq-cf/odb/tshoot-tech-id-instance-owner' %>

<a id="monitor-quota"></a><h3>Monitor Quota Saturation and Service Instance Count</h3>

<%= partial '../../rabbitmq-cf/odb/tshoot-tech-monitor-quota' %>

<a id="faq"></a><h2>Frequently Asked Questions</h2>

<a id="newversion"></a><h3>What should I check before deploying a new version of the tile?</h3>

Ensure that all nodes in the cluster are healthy via the RabbitMQ Management UI, or health metrics exposed via the firehose. 

Do not rely on BOSH `instances`, to execute this task correctly. That output reflects the state of the Erlang VM used by RabbitMQ, not the RabbitMQ application.

<a id="stopstart"></a><h3>What is the correct way to stop and start RabbitMQ in PCF?</h3>

Only BOSH commands should be used by the operator to interact with the RabbitMQ application. Examples for both versions of the CLI are given below.

 * **For Ops Manager v1.10 or earlier:** <br>
 `bosh stop rabbitmq-server` `bosh start rabbitmq-server` 
 * **For Ops Manager v1.11 or later:** <br>
 `bosh2 stop rabbitmq-server` `bosh2 start rabbitmq-server` 

There are BOSH job lifecycle hooks which are only fired when rabbitmq-server is stopped through BOSH.  You can also stop individual instances by running one of the following commands:

 * **For Ops Manager v1.10 or earlier:** `bosh stop JOB [index]` 
 * **For Ops Manager v1.11 or later:** `bosh2 stop JOB [index]`

<p class="note"><strong>Note:</strong> Do not use <code>monit stop rabbitmq-server</code>. This command does not call the drain scripts.</p>

<a id="boshstopprocess"></a><h3>What happens when I stop the RabbitMQ server?</h3>

You can stop the RabbitMQ server with BOSH `stop`.

BOSH starts the shutdown sequence from the bootstrap instance.

This command tells the RabbitMQ application to shut down and then shut down the Erlang VM in which it is running. If this succeeds, run the following
checks to ensure that the RabbitMQ application and Erlang VM have stopped:

1. If `/var/vcap/sys/run/rabbitmq-server/pid` exists, check that the PID inside this file does not point to a running Erlang VM process. This process checks the Erlang PID and not the RabbitMQ PID.
1. Check that `rabbitmqctl` does not return an Erlang VM PID.

Once this completes on the bootstrap instance, BOSH will continue the same sequence on the next instance. All remaining RabbitMQ servers stop sequentially after that.

<a id="boshstopresult"></a><h3>What happens when the RabbitMQ server fails to stop?</h3>

If BOSH `stop` fails, you will likely get an error saying that the drain
script failed with:

<pre class="terminal">
result: 1 of 1 drain scripts failed. Failed Jobs: rabbitmq-server.
</pre>

<a id="boshstopaction"></a><h3>What do I do when the RabbitMQ server fails to stop?</h3>

The drain script logs to `/var/vcap/sys/log/rabbitmq-server/drain.log`. If you
have a remote syslog configured, this will appear as the `rmq_server_drain`
program.

1. BOSH `ssh` into the failing rabbitmq-server instance and start the
rabbitmq-server job by running `monit start rabbitmq-server`).
1. When the rabbitmq-server job is running (confirm this via `monit status`), run `DEBUG=1`
`/var/vcap/jobs/rabbitmq-server/bin/drain`. This will tell you exactly why it’s
failing.

<p class="note"><strong>Note:</strong> You will not be
able to start the job with BOSH <code>start</code> as this command always runs the drain script first. It will fail since the drain script is failing.</p>

<a id="backup"></a><h3>How can I manually back up the state of the RabbitMQ cluster?</h3>

You can back up the state of a RabbitMQ cluster for both the on-demand and pre-provisioned services  using the RabbitMQ Management API. Backups include vhosts, exchanges, queues and users. 

<h4>Back up Manually</h4>

1. Log in to the RabbitMQ Management UI as the admin user you created.  

1. Select **export definitions** from the main page.  

<h4>Back up and Restore with a Script</h4>

Use the API to run scripts with code similar to the following:  

1. For the backup:

    ```
    curl -u "$USERNAME:$PASSWORD" "http://$RABBIT_ADDRESS:15672/api/definitions"
    -o "$BACKUP_FOLDER/rabbit-backup.json"
    ```

2. For the restore:

    ```
    curl -u "$USERNAME:$PASSWORD" "http://$RABBIT_ADDRESS:15672/api/definitions"
    -X POST -H "Content-Type: application/json" -d
    "@$BACKUP_FOLDER/rabbit-backup.json"
    ```
    
<a id="preupgrade"></a><h3>What pre-upgrade checks should I do?</h3>

Before doing any upgrade of RabbitMQ, Pivotal recommends checking the following:

1. In Operations Manager check that the status of all of the instances is healthy.
2. Log into the RabbitMQ Management UI and check that no alarms have been triggered and that all nodes are healthy, that is, 
they should display as green.
3. Check that the system is not close to hitting either the memory or disk alarm. Do this by looking at what has been 
consumed by each node in the RabbitMQ Managment UI.


<a id="kb"></a><h2>Knowledge Base (Community)</h2>

<%= partial '../../rabbitmq-cf/odb/tshoot-kb' %>

<a id="support"></a><h2>File a Support Ticket</h2>

<%= partial '../../rabbitmq-cf/odb/tshoot-support' %>
