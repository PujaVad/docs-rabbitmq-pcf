---
title: Off-Platform Access
owner: RabbitMQ
---

This topic describes how to enable off-platform access for RabbitMQ for PCF service
instances.

## <a id='overview'></a> Overview

Enabling off-platform allows a service instance to be connected to components outside the PCF foundation.
There are multiple use cases for off-platform RabbitMQ access:

- Accessing RabbitMQ from apps deployed to Pivotal Application Service (PAS), but in a different PCF foundation
- Replicating messages between RabbitMQ clusters in different PCF foundations,
for example, to setup federation for disaster recovery
- Enabling legacy apps to communicate with PAS-deployed apps through RabbitMQ
- Using RabbitMQ for PCF as a way to deploy and manage RabbitMQ for apps
that are not deployed to PAS

## <a id='architecture'></a> Architecture

Off-platform access to RabbitMQ instances leverages the
[TCP router](https://docs.pivotal.io/pivotalcf/opsguide/tcp-routing-ert-config.html) in PAS.
It also requires some ports to be open on your external load balancer.
These ports are reserved for RabbitMQ traffic coming from outside the PCF foundation.
Every time a developer creates a service instance of an off-platform plan, a port
in this range is allocated to redirect traffic to the service instance.

![architecture](/images/off-platform-architecture.png)


## <a id='configuration'></a> Enable Off-Platform Access

To enable off-platform access:

1. Enable TCP Routing in PAS.
Ensure that you review the Pre-Deployment Steps required to enable this feature,
see [PAS documentation](https://docs.pivotal.io/pivotalcf/opsguide/tcp-routing-ert-config.html)

1. In the **Global Settings for On-Demand Plans** pane, fill in the following fields:
    - **External TCP domain**: corresponding with the DNS entry for the external load balancer.
    - **Port Range**: a valid range of ports for RabbitMQ service instances to use,
    for example, 1024-2000. Every service instance allocates a port for each plugin enabled,
    therefore ensure that the range has enough capacity to accommodate the desired number of service instances.

    ![Global settings for on-demand plans pane with the External TCP domain field
    filled in with tcp.elcajon.cf-app.com and the Port Range field filled in with
    1024-2025.](/images/global-settings-off-platform.png)

1. Allow ingress traffic at the load-balancer level for the specified port range.

1. Navigate to the service plan that you want to use and select the **Off-Platform Access** checkbox.
Pivotal recommends that you change the name or the description of the plan to reflect the new feature.
![Service plan pane with the Off-Platform Access checkbox selected.](/images/enable-off-platform.png)

## <a id='workflow'></a> Workflow

The app developer workflow does not change:

1. Create a service instance with the off-platform plan, using the cf CLI.

1. Obtain credentials by creating a service key using the cf CLI. The `uri` section
of the service key contains the address to the TCP router and a port from the port range.
The app developer can use this URI to connect to the service instance from outside the foundation.
